/**
 * Genji Scrum Tool and Issue Tracker
 * Copyright (C) 2015 Steinbeis GmbH & Co. KG Task Management Solutions

 * <a href="http://www.trackplus.com">Genji Scrum Tool</a>

 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/* $Id:$ */

package com.aurel.track.persist;

import java.util.ArrayList;
import java.util.List;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import org.apache.torque.TorqueException;
import org.apache.torque.util.Criteria;

import com.aurel.track.beans.TPublicReportRepositoryBean;
import com.aurel.track.dao.PublicRepositoryDAO;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Fri Apr 30 10:47:50 CEST 2004]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class TPublicReportRepositoryPeer
	extends com.aurel.track.persist.BaseTPublicReportRepositoryPeer
	implements PublicRepositoryDAO
{

	private static final long serialVersionUID = 4234432612013281422L;
	
	private static final Logger LOGGER = LogManager.getLogger(TPublicReportRepositoryPeer.class); 
	
	/**
	 * Load all public TQLs
	 * @return
	 */
	public List<TPublicReportRepositoryBean> loadAll() {
		try {
			Criteria criteria = new Criteria ();
			return convertTorqueListToBeanList(doSelect(criteria));
		} catch (TorqueException e){
			LOGGER.error("Getting all TPublicReportRepositories failed with " + e.getMessage(), e);
			return null;
		}
	}

	/**
	 * Converts a list of TPublicReportRepository torque objects 
	 * to a list of TPublicReportRepositoryBean objects 
	 * @param torqueList
	 * @return
	 */
	private static List<TPublicReportRepositoryBean> convertTorqueListToBeanList(
			List<TPublicReportRepository> torqueList) {
		List<TPublicReportRepositoryBean> beanList = new ArrayList<TPublicReportRepositoryBean>();
		if (torqueList!=null) {
			for (TPublicReportRepository publicReportRepository : torqueList) {
				beanList.add(publicReportRepository.getBean());
			}
		}
		return beanList;
	}
}
